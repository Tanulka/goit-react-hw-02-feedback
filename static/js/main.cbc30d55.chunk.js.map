{"version":3,"sources":["components/FeedbackOptions.js","components/Section.js","components/Statistics.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["FeedbackOptions","state","buttons","this","handleOnClick","props","map","button","type","name","onClick","Component","Section","title","children","className","s","section","defaultProps","Statistics","bad","good","neutral","positivePercentage","total","Notification","message","App","addFeedback","e","target","count","setState","calcStatistics","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAGMA,E,4MACJC,MAAQ,CACNC,QAAS,CAAC,OAAQ,UAAW,Q,4CAO/B,WACE,IAAQA,EAAYC,KAAKF,MAAjBC,QACAE,EAAkBD,KAAKE,MAAvBD,cACR,OAAOF,EAAQI,KAAI,SAAAC,GAAM,OACvB,wBAAQC,KAAK,SAAsBC,KAAMF,EAAQG,QAASN,EAA1D,SACGG,GADwBA,U,GAbHI,aAoBfX,I,gBCnBTY,E,4JASJ,WACE,MAA4BT,KAAKE,MAAzBQ,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACGJ,GAAS,wBAAQE,UAAWC,IAAEH,MAArB,SAA6BA,IACtCC,S,GAdaH,aAAhBC,EACGM,aAAe,CACpBL,MAAO,IAkBID,QCZAO,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,mBAAoBC,EAA3C,EAA2CA,MAA3C,OACjB,qCACE,uCAAUH,KACV,0CAAaC,KACb,sCAASF,KACT,wCAAWI,KACX,oDAAuBD,EAAvB,WCLEE,E,4JASJ,WACE,IAAQC,EAAYvB,KAAKE,MAAjBqB,QACR,OAAO,4BAAIA,Q,GAXYf,aAArBc,EACGP,aAAe,CACpBQ,QAAS,IAaED,QCZTE,E,4MACJ1B,MAAQ,CACNoB,KAAM,EACNC,QAAS,EACTF,IAAK,EACLI,MAAO,EACPD,mBAAoB,G,EAGtBK,YAAc,SAAAC,GACZ,IAAMrB,EAAOqB,EAAEC,OAAOrB,KAChBsB,EAAQ,EAAK9B,MAAMO,GACzB,EAAKwB,SAAL,eAAiBxB,EAAOuB,EAAQ,IAAK,kBAAM,EAAKE,qB,oDAGlD,WACE,MAA+B9B,KAAKF,MAA5BmB,EAAR,EAAQA,IAAKC,EAAb,EAAaA,KACPG,EAAQJ,EAAMC,EADpB,EAAmBC,QAEbC,EAAqBW,KAAKC,MAAOd,EAAOG,EAAS,KACvDrB,KAAK6B,SAAS,CAAER,QAAOD,yB,oBAGzB,WACE,MAA0DpB,KAAKF,MAAvDmB,EAAR,EAAQA,IAAKC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,mBAAoBC,EAAhD,EAAgDA,MAChD,OACE,qCACE,cAAC,EAAD,CAASX,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBT,cAAeD,KAAKyB,gBAEvC,cAAC,EAAD,CAASf,MAAM,aAAf,SACIW,EAGA,cAAC,EAAD,CACEJ,IAAKA,EACLC,KAAMA,EACNC,QAASA,EACTC,mBAAoBA,EACpBC,MAAOA,IAPT,cAAC,EAAD,CAAcE,QAAQ,+B,GA/BhBf,aA+CHgB,ICzCAS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cbc30d55.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass FeedbackOptions extends Component {\n  state = {\n    buttons: ['good', 'neutral', 'bad'],\n  };\n\n  static propTypes = {\n    handleOnClick: PropTypes.func,\n  };\n\n  render() {\n    const { buttons } = this.state;\n    const { handleOnClick } = this.props;\n    return buttons.map(button => (\n      <button type=\"button\" key={button} name={button} onClick={handleOnClick}>\n        {button}\n      </button>\n    ));\n  }\n}\n\nexport default FeedbackOptions;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section-module.css';\n\nclass Section extends Component {\n  static defaultProps = {\n    title: '',\n  };\n\n  static propTypes = {\n    title: PropTypes.string,\n  };\n\n  render() {\n    const { title, children } = this.props;\n    return (\n      <section className={s.section}>\n        {title && <header className={s.title}>{title}</header>}\n        {children}\n      </section>\n    );\n  }\n}\n\nexport default Section;\n","import React from 'react';\n\nconst Statistics = ({ bad, good, neutral, positivePercentage, total }) => (\n  <>\n    <p>Good: {good}</p>\n    <p>Neutral: {neutral}</p>\n    <p>Bad: {bad}</p>\n    <p>Total: {total}</p>\n    <p>Positive feedback: {positivePercentage}%</p>\n  </>\n);\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Notification extends Component {\n  static defaultProps = {\n    message: '',\n  };\n\n  static propTypes = {\n    message: PropTypes.string,\n  };\n\n  render() {\n    const { message } = this.props;\n    return <p>{message}</p>;\n  }\n}\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n    positivePercentage: 0,\n  };\n\n  addFeedback = e => {\n    const type = e.target.name;\n    const count = this.state[type];\n    this.setState({ [type]: count + 1 }, () => this.calcStatistics());\n  };\n\n  calcStatistics() {\n    const { bad, good, neutral } = this.state;\n    const total = bad + good + neutral;\n    const positivePercentage = Math.round((good / total) * 100);\n    this.setState({ total, positivePercentage });\n  }\n\n  render() {\n    const { bad, good, neutral, positivePercentage, total } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions handleOnClick={this.addFeedback}></FeedbackOptions>\n        </Section>\n        <Section title=\"Statistics\">\n          {!total ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              bad={bad}\n              good={good}\n              neutral={neutral}\n              positivePercentage={positivePercentage}\n              total={total}\n            ></Statistics>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}